services:
  structurizr:
    image: structurizr/lite
    ports:
      - "8080:8080"
    volumes:
      - ./docs:/usr/local/structurizr
  
  task-ms:
    image: task-ms
    build:
      context: .
      dockerfile: TaskMicroservice/Dockerfile


  usermicroservice:
    image: usermicroservice
    build:
      context: .
      dockerfile: UserMicroservice/Dockerfile
    depends_on:
      - postgres
      - unleash
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=userdb;Username=root;Password=password
      - Unleash__ApiUrl=http://unleash:4242/api/
      - Unleash__ApiToken=default:development.unleash-insecure-api-token
  
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  # Unleash Server (Feature Flag Management)
  unleash-db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: unleash
      POSTGRES_USER: unleash
      POSTGRES_DB: unleash
    volumes:
      - unleash-db-data:/var/lib/postgresql/data
  
  unleash:
    image: unleashorg/unleash-server
    ports:
      - "4242:4242"
    environment:
      DATABASE_URL: postgres://unleash:unleash@unleash-db/unleash
      DATABASE_SSL: "false"
      UNLEASH_URL: http://localhost:4242
    depends_on:
      - unleash-db
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:4242/health || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  unleash-db-data: